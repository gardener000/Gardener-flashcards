// data/cn_mac_layer_part2.js
export default {
  name: "计算机网络：MAC层（下）",
  data: [
    {front:"经典以太网 vs 交换式以太网 🚌 vs 🌟", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>经典以太网 (Classical Ethernet)</dt><dd>采用 <mark>总线型拓扑</mark>，所有设备共享带宽和冲突域，速率较低 (3-10 Mbps)，必须使用 <mark>CSMA/CD</mark> 协议解决冲突。</dd><dt style='font-weight: bold; color: #005A9C;'>交换式以太网 (Switched Ethernet)</dt><dd>现代主流形式，使用 <mark>交换机</mark> 连接设备，每个端口是一个独立的冲突域。速率高 (100M, 1G, 10G+)，在 <mark>全双工</mark> 模式下无需 CSMA/CD。</dd></dl></div>"},
    {front:"曼彻斯特编码的原理与优缺点 📉📈", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>编码规则</dt><dd>下降沿 (高->低) 表示 <mark>0</mark>，上升沿 (低->高) 表示 <mark>1</mark>。每个比特中间都有一次电平跳变。</dd><dt style='font-weight: bold; color: #005A9C;'>优点</dt><dd>1. <mark>自带时钟</mark>：跳变可用于同步，解决长连0/1问题。<br>2. <mark>直流分量为零</mark>：高低电平各占一半，利于传输。</dd><dt style='font-weight: bold; color: #005A9C;'>缺点</dt><dd>编码效率低，<mark>波特率是比特率的两倍</mark>，浪费带宽。</dd></dl></div>"},
    {front:"以太网的服务为什么是 <mark>无连接</mark> 和 <mark>不可靠</mark> 的？ 📮", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>无连接 (Connectionless)</dt><dd>发送前不建立连接，直接发送数据帧，就像寄平信。</dd><dt style='font-weight: bold; color: #005A9C;'>不可靠 (Unreliable)</dt><dd>提供“尽力而为”的服务，不保证数据帧一定成功送达，<mark>不进行重传</mark>。帧损坏或丢失由上层处理。</dd><dt style='font-weight: bold; color: #005A9C;'>设计哲学</dt><dd>简化链路层设计，做到 <mark>简单、便宜、高效</mark>。将可靠性传输的复杂任务交给更高层的协议 (如 <mark>TCP</mark>)。</dd></dl></div>"},
    {front:"以太网帧结构的关键字段有哪些？ 📦", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>前同步码 & 定界符 (8B)</dt><dd>用于时钟同步和标识帧开始。</dd><dt style='font-weight: bold; color: #005A9C;'>目的/源MAC地址 (各6B)</dt><dd>48位的全球唯一硬件地址。</dd><dt style='font-weight: bold; color: #005A9C;'>类型/长度 (2B)</dt><dd>值 > <mark>1536</mark> 表示类型 (上层协议)，否则表示数据字段长度。</dd><dt style='font-weight: bold; color: #005A9C;'>数据 (46-1500B)</dt><dd>承载上层数据包，<mark>MTU为1500字节</mark>。不足46字节需填充。</dd><dt style='font-weight: bold; color: #005A9C;'>帧校验序列 (FCS, 4B)</dt><dd>使用 <mark>CRC</mark> 算法检测传输错误。</dd></dl></div>"},
    {front:"为什么以太网最小帧长是 <mark>64字节</mark>？ 🤔", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>核心原则</dt><dd>为了让 <mark>CSMA/CD</mark> 协议正常工作，必须保证发送方在发送完一帧前，能收到来自网络最远端的冲突信号。</dd><dt style='font-weight: bold; color: #005A9C;'>计算公式</dt><dd>帧的发送时间 ≥ 信号的往返传播时间 (RTT 或 <mark>2τ</mark>)</dd><dt style='font-weight: bold; color: #005A9C;'>推导</dt><dd>在10Mbps经典以太网中，最大RTT (2τ) 约为 <mark>51.2μs</mark>。<br>要发送51.2μs，需要的数据量为：<br><mark>10Mbps * 51.2μs = 512 bits = 64 bytes</mark>。<br>所以最短帧长定为64字节，以确保任何冲突都能被检测到。</dd></dl></div>"},
    {front:"CSMA/CA 如何 <mark>避免</mark> 冲突？ ✋", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>与 CSMA/CD 的核心区别</dt><dd>WiFi无法实现冲突<mark>检测</mark> (边发边听)，所以重点在于冲突<mark>避免</mark> (Collision Avoidance)。</dd><dt style='font-weight: bold; color: #005A9C;'>关键机制</dt><dd>1. <mark>提前退避</mark>：即使信道空闲，也需等待一个 <mark>DIFS</mark> + 随机退避时间再发送，错开各站点的发送时机。<br>2. <mark>ACK确认</mark>：接收方成功收到数据后，会回复一个 <mark>ACK</mark> 帧。发送方若未收到ACK，则认为发生冲突并重传。<br>3. <mark>RTS/CTS (可选)</mark>：通过虚拟感知机制解决隐藏终端问题。</dd></dl></div>"},
    {front:"什么是 <mark>虚拟感知</mark> (RTS/CTS)？它如何解决隐藏终端问题？ 📡🤫📡", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>问题背景</dt><dd>隐藏终端：A和C都听不到对方，但都能听到B。若A和C同时发给B，就会在B处冲突。</dd><dt style='font-weight: bold; color: #005A9C;'>解决方案：RTS/CTS握手</dt><dd>1. A先向B发送 <mark>RTS</mark> (请求发送)，RTS中包含通信所需时长。<br>2. B回复 <mark>CTS</mark> (清除发送)，CTS也包含该时长。<br>3. C听不到A的RTS，但能听到B的CTS。C解析出时长后，会设置一个 <mark>NAV (网络分配向量)</mark> 计时器，在此期间保持静默，从而避免冲突。</dd><dt style='font-weight: bold; color: #005A9C;'>核心</dt><dd>将物理上的“听不到”问题，通过信令交换转换为逻辑上的“知道信道被占用”。</dd></dl></div>"},
    {front:"交换机如何实现 <mark>智能转发</mark>？ 🧠", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>两大核心机制</dt><dd>交换机通过自学习构建和维护一张 <mark>MAC地址表</mark> (转发表)。</dd><dt style='font-weight: bold; color: #005A9C;'>1. 反向学习 (Backward Learning)</dt><dd>检查收到的每个帧的 <mark>源MAC地址</mark>，将该地址与进入端口的映射关系 `{MAC_Source, Port_In}` 记录到表中。通过这种方式学习网络拓扑。</dd><dt style='font-weight: bold; color: #005A9C;'>2. 转发/过滤/洪泛 (Forward/Filter/Flood)</dt><dd>检查帧的 <mark>目的MAC地址</mark>：<br> • <b>找到匹配</b>: 若目的端口 <mark>不是</mark> 源端口，则从目的端口<mark>转发</mark>；若 <mark>是</mark> 源端口，则<mark>丢弃</mark> (过滤)。<br> • <b>未找到匹配</b>: 对该未知地址执行<mark>洪泛 (Flooding)</mark>，即向除源端口外的所有端口复制并发送。</dd></dl></div>"},
    {front:"什么是 <mark>生成树协议 (STP)</mark>？它为什么重要？ 🌳", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>目的</dt><dd>在存在物理环路的交换网络中，<mark>防止广播风暴</mark>和MAC地址表不稳定等问题。</dd><dt style='font-weight: bold; color: #005A9C;'>工作原理</dt><dd>1. <b>选举根网桥</b>：选举一个MAC地址最小的交换机作为根。<br>2. <b>确定端口角色</b>：在每个交换机上选举根端口、指定端口和阻塞端口。<br>3. <b>逻辑上破环</b>：通过将某些端口置于 <mark>阻塞 (Blocking)</mark> 状态，禁止其转发数据帧，从而在逻辑上剪断环路，形成一棵覆盖全网的无环“树”。</dd><dt style='font-weight: bold; color: #005A9C;'>结论</dt><dd>STP保证了冗余链路的可用性，同时避免了环路带来的灾难性网络故障。</dd></dl></div>"},
    {front:"什么是 <mark>VLAN</mark>？它与 <mark>802.1Q</mark> 有何关系？ 🏷️", back:"<div style='font-family: Arial, sans-serif; background-color: #f9f9f9; color: #333; padding: 15px; border-radius: 8px; line-height: 1.6;'><dl><dt style='font-weight: bold; color: #005A9C;'>VLAN (虚拟局域网)</dt><dd>在物理上是同一个局域网，但在逻辑上划分为多个独立的 <mark>广播域</mark>。不同VLAN间的通信默认隔离，如同连接在不同交换机上。</dd><dt style='font-weight: bold; color: #005A9C;'>好处</dt><dd>• <mark>安全性</mark>：隔离不同部门或用户的流量。<br>• <mark>灵活性</mark>：按功能划分，不受物理位置限制。<br>• <mark>性能</mark>：将广播流量限制在各自的VLAN内。</dd><dt style='font-weight: bold; color: #005A9C;'>802.1Q & Trunk</dt><dd>当一个VLAN跨越多个交换机时，需要使用 <mark>Trunk</mark> 链路。为了在Trunk上传输时区分不同VLAN的帧，<mark>IEEE 802.1Q</mark> 协议定义了在以太网帧中插入一个4字节的“<mark>VLAN标签</mark>”，其中最重要的字段是 <mark>VLAN ID (12位)</mark>。</dd></dl></div>"}
  ]
};